@{
     Layout = "~/_LoginLayout.cshtml";
    Page.Title = "Password Reset";

    var passwordResetToken = Request.Form["resetToken"] ?? Request.QueryString["resetToken"];
    var newPassword = "";
    var confirmPassword ="";

    bool tokenExpired = false;
    bool isSuccess = false;

       // Setup validation
    Validation.RequireField("newPassword", "Wachtwoord is verplicht!");
    Validation.RequireField("confirmPassword", "is verplicht!");
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Password must be at least 6 characters"));
            
    if (IsPost && Validation.IsValid() ) 
    {
          AntiForgery.Validate();
         newPassword = Request["newPassword"];
         confirmPassword = Request["confirmPassword"];

        if (WebSecurity.ResetPassword(passwordResetToken, newPassword)) 
        {
            isSuccess = true;
        } 
        else 
        {
            ModelState.AddError("passwordResetToken", "The password reset token is invalid.");
            tokenExpired = true;
        }
    }
}

<section id="loginForm">
    <legend><h1>Wachtwoord vergeten?</h1></legend>
        <div class="row">
            <div class="col-md-4 col-md-offset-4">
                <div class="login-panel panel panel-default">
                    <div class="panel-heading">
                    <h3 class="panel-title">Wachtwoord wijzigen</h3>
                    </div>
                    <form role="form" method="post">
                    
                        @if (!WebMail.SmtpServer.IsEmpty()) 
                        {
                            if (!Validation.IsValid()) 
                            {
                               <p class="validation-summary-errors">
                               @if (tokenExpired) 
                                {
                                    <text>The password reset token is incorrect or may be expired. Visit the <a href="~/Account/ForgotPassword">forgot password page</a> 
                                    to generate a new one.</text>
                                } 
                                else if(!isSuccess)
                                {
                                    <text>Could not reset password. Please correct the errors and try again.</text>
                                }   
                                </p>
                            }
    
                            if (isSuccess)
                            {
                            <p class="message-success">
                            Password changed! Click <a href="~/Account/Login" title="Log in">here</a> to log in.
                            </p>
                            }
                            
                            
                            @AntiForgery.GetHtml()
                            @Html.ValidationSummary(excludeFieldErrors: true)
                           
                            
                            <div class="form-group">
                            <label for="newPassword" @if (!ModelState.IsValidField("newPassword")) {<text>class="error-label"</text>}>New password</label> 
                            <input type="password" class="form-control" id="newPassword" name="newPassword" disabled="@isSuccess" @Validation.For("newPassword") />
                            @Html.ValidationMessage("newPassword")
                            </div>

                            <div class="form-group">
                            <label for="confirmPassword" @if (!ModelState.IsValidField("confirmPassword")) {<text>class="error-label"</text>}>Confirm password</label> 
                            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" disabled="@isSuccess" @Validation.For("confirmPassword") />
                            @Html.ValidationMessage("confirmPassword")
                            </div>

                            <div class="form-group">
                            <label for="resetToken" @if (!ModelState.IsValidField("resetToken")) {<text>class="error-label"</text>}>Password reset token</label> 
                            <input type="text" class="form-control" id="resetToken" name="resetToken" value="@passwordResetToken" disabled="@isSuccess" @Validation.For("resetToken") />
                            @Html.ValidationMessage("resetToken")
                            </div>

                           <input type="submit" class="btn btn-lg btn-success btn-block" value="Reset password" value="Wachtwoord Wijzigen" disabled="@isSuccess" />                                     
                        
                        }         
                         else 
                         {
                            <p class="message-info">
                            Password recovery is disabled for this website because the SMTP server is 
                            not configured correctly. Please contact the owner of this site to reset 
                            your password.
                            </p>
                         }
                    
                        
                        
                     </form>      
                    </div>
                    
                </div>
                
                 
                             
            </div>
        </div>
</section>


