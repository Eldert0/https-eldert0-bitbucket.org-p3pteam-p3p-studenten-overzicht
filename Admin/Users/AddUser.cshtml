@{
        Layout = "~/_MainLayout.cshtml";
        Page.Title = "Gebruiker toevoegen";



     // Initialize general page variables
    var email = "";
    var role = "";
    var password = "awnawndiawdin";
    var voornaam = "";
    var achternaam = "";
    var telefoonnummer = "";
    var geslacht = "";
    Database db;


    // Setup validation
    Validation.Add("voornaam", 
        Validator.Required("Je moet een voornaam invullen"), 
       Validator.StringLength(20, 2, "Niet meer dan 20 karakters"));
    Validation.Add("achternaam", 
        Validator.Required("Je moet een achternaam invullen"), 
       Validator.StringLength(20, 2, "Niet meer dan 20 karakters"));
    Validation.Add("geslacht", 
       Validator.Required("je moet een geslacht invullen"));
    Validation.Add("telefoonnummer", 
        Validator.Required("je moet een telefoonnummer invullen"), 
        Validator.StringLength(20, 0,"Niet meer dan 20 karakters")); 
    Validation.Add("email", 
        Validator.Required("Je moet een email-adres invullen"),
        Validator.Regex(@"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$", 
        "Invalid format for an email address")); 
        

   

    // If this is a POST request, validate and process data
    if (IsPost) {
      
        email = Request.Form["email"];
        role = Request.Form["roleSelect"];
        voornaam = Request.Form["voornaam"];
        achternaam = Request.Form["achternaam"];
        telefoonnummer = Request.Form["telefoonnummer"];
        geslacht = Request.Form["geslacht"];


        // If all information is valid, create a new account
        if (Validation.IsValid()) {
            // Insert a new user into the database
            db = Database.Open("database");

            // Check if user already exists
            var user = db.QuerySingle("SELECT Email FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", email);
            if (user == null) {
                // Insert email into the profile table
                db.Execute("INSERT INTO UserProfile (Email) VALUES (@0)", email);
                Roles.AddUserToRole(email, role);

                // Create and associate a new entry in the membership database.
                // If successful, continue processing the request
                try {
                    bool requireEmailConfirmation = !WebMail.SmtpServer.IsEmpty();
                    var token = WebSecurity.CreateAccount(email, password, requireEmailConfirmation);
                    if (requireEmailConfirmation) {
                        var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
                        var confirmationUrl = hostUrl + VirtualPathUtility.ToAbsolute("~/Account/Confirm?confirmationCode=" + HttpUtility.UrlEncode(token));

                        WebMail.Send(
                            to: email,
                            subject: "Please confirm your account",
                            body: "Your confirmation code is: " + token + ". Visit <a href=\"" + confirmationUrl + "\">" + confirmationUrl + "</a> to activate your account."
                        );
                    }

                    if (requireEmailConfirmation) {
                        // Thank the user for registering and let them know an email is on its way
                        Response.Redirect("~/Account/Thanks");
                    } else {
                        // Navigate back to the homepage and exit
                        WebSecurity.Login(email, password);

                        Response.Redirect("~/");
                    }
                } catch (System.Web.Security.MembershipCreateUserException e) {
                    ModelState.AddFormError(e.Message);
                }
            } else {
                // User already exists
                ModelState.AddFormError("Email address is already in use.");
            }
        }
    }

  db = Database.Open("database");
        var query = "SELECT * FROM webpages_Roles";
        var data = db.Query(query);


}
<div id="content">
    <div id="customForm">
    <div class="row">
         <form id="AddUserForm" method="POST" action="">
                <div class="form-group"> 
                <label for="voornaam" @if(!ModelState.IsValidField("voornaam")) {<text>class="error-label"</text>}>Password</label>
                <input type="text" name="voornaam" class="form-control" id="IdVoornaam" placeholder="Voer voornaam in" value="@voornaam" @Validation.For("voornaam")>
                @Html.ValidationMessage("voornaam")
                </div>

                <div class="form-group"> 
                <label for="achternaam">Achternaam</label>
                <input type="text" name="achternaam" class="form-control" id="IdAchternaam" placeholder="Voer achternaam in" value="@achternaam" @Validation.For("achternaam")>
                @Html.ValidationMessage("achternaam")
                </div>
                <div class="form-group">
                <label for="exampleInputFile">Geslacht</label>
                <select name="geslacht" class="form-control">
                <option selected="">Voer een geslacht in</option>
                <option value="1" selected=@(Request.Form["geslacht"] == "1") >Man</option>
                <option value="2" selected=@(Request.Form["geslacht"] == "2")>Vrouw</option>
                </select>
                </div>
                
                <div class="form-group"> 
                <label for="telefoonnummer">Telefoonnummer</label>
                <input type="tel" name="telefoonnummer" class="form-control" id="IdTelefoonnummer" placeholder="Voer telefoonnummer in" value="@telefoonnummer" @Validation.For("telefoonnummer")>
                @Html.ValidationMessage("telefoonnummer")
                </div>

                <div class="form-group">
                <label for="email">Email address</label>
                <input type="email" name="email" class="form-control" id="IdEmail" placeholder="Voer email-Adres in" value="@email" @Validation.For("email")>
                @Html.ValidationMessage("email")
                </div>

                <input name="__RequestVerificationToken" type="hidden" value=""/>  
                <div class="form-group">
                <label for="exampleInputFile">Rol van de nieuwe gebruiker</label>
                <select name="roleSelect" class="form-control">
                <option selected="selected">Voer een rol in</option>
                @foreach(var row in db.Query("SELECT * FROM webpages_Roles")) 
                 {
                    <option value="@row.RoleId" selected=@(Request.Form["roleSelect"] == @row.RoleId.ToString())>@row.rolename</option>
                 }
                 db.Close();          
                </select>
                </div>
                <button type="submit" class="btn btn-default">Toevoegen</button>
             </form>
        </div>
    </div>
</div>

